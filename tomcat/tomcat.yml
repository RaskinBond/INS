---
- name: Install Tomcat 9
  become: yes
  hosts: AppServer
  vars:
    - java_home: /usr/lib/jvm/java-11-openjdk-amd64 
    - username: tomcat
    - group: tomcat
    - default_shell: /bin/false
    - tomcat_home: /opt/tomcat
    - tomcat_latest: /opt/tomcat/latest
    - tomcat_bin: /opt/tomcat/latest/bin
    - tomcat_service_location: /etc/systemd/system/tomcat.service
    - tomcat_version: 9.0.76

  tasks:
    - name: Update apt repo & cache
      apt: 
        update_cache: yes

    - name: Install openjdk 11 
      package:
        name: "{{ java_package }}"
        state: present
    
    - name: Create a tomcat group
      ansible.builtin.group:
        name: "{{ username }}"
        state: present
    
    - name: Create a tomcat user
      ansible.builtin.user:
        name: "{{ username }}"
        group: "{{ username }}"
        shell: "{{ default_shell }}"
        home: "{{ tomcat_home }}"
        create_home: yes
        state: present

    - name: Download Tomcat
      ansible.builtin.get_url:
        url: "https://dlcdn.apache.org/tomcat/tomcat-9/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
    
    - name: Extract Tomcat
      ansible.builtin.unarchive:
        src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "{{ tomcat_home }}"
        creates: "{{ tomcat_home }}/apache-tomcat-{{ tomcat_version }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        remote_src: yes

    - name: Create a sym-link
      ansible.builtin.file:
        src: "{{ tomcat_home }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ tomcat_latest }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        state: link

    - name: Change ownership
      ansible.builtin.file:
        path: "{{ tomcat_home }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        state: directory
        recurse: yes
    
    - name: Search executable files
      ansible.builtin.find:
        paths: "{{ tomcat_bin }}"
        patterns: "*.sh"
        recurse: yes
      register: sh_files_tomcat_bin
  
    - name: Print all the files
      debug:
        var: sh_files_tomcat_bin
    
    - name: Make .sh files executables
      ansible.builtin.file:
        path: '{{ item.path }}'
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0755'
      loop: "{{ sh_files_tomcat_bin.files }}"

      
    - name: copy tomcat.service
      ansible.builtin.copy:
        src: 'tomcat.service.j2'
        dest: "{{ tomcat_service_location }}"
        owner: "{{ username }}"
        group: "{{ username }}"
  
    - name: reload the daemon, enable and start the tomcat service
      ansible.builtin.systemd:
        name: tomcat.service
        daemon_reload: yes
        enabled: yes
        state: started
        
